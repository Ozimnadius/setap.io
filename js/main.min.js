//@prepros-append pages/common.js
//@prepros-append pages/maps.js
//@prepros-append pages/header.js
//@prepros-append pages/sliders.js
//@prepros-append pages/index.js
//@prepros-append pages/uslugi.js
//@prepros-append pages/to.js
//@prepros-append pages/market.js
//@prepros-append pages/catalog.js
//@prepros-append pages/product.js
//@prepros-append pages/cart.js

// common.js
function Switches(prop) {
    this.sws = document.querySelector(prop.sws);
    this.swsList = document.querySelectorAll(prop.sw);
    this.tabs = document.querySelectorAll(prop.tab);
    this.tabSelector = prop.tab;
    this.tabsContainer = document.querySelector(prop.tabsContainer);

    let that = this;

    this.init = function () {
        let $this = that.swsList[0],
            id = $this.dataset.id,
            maxH = 0,
            tab = document.querySelector(that.tabSelector + '[data-id="' + id + '"]');


        for (let i = 0; i < that.swsList.length; i++) {
            that.swsList[i].classList.remove('active');
        }

        for (let i = 0; i < that.tabs.length; i++) {
            that.tabs[i].classList.remove('active');
            let height =  that.tabs[i].offsetHeight;

            if (maxH<height) {
                maxH = height;
            }
        }

        tab.classList.add('active');
        $this.classList.add('active');
        that.tabsContainer.style.height = maxH+'px';

    };

    for (let i = 0; i < that.swsList.length; i++) {
        that.swsList[i].addEventListener('click', function (e) {

            let percent = (this.offsetLeft / that.width) * 100,
                id = this.dataset.id,
                tab = document.querySelector(that.tabSelector + '[data-id="' + id + '"]');


            for (let i = 0; i < that.swsList.length; i++) {
                that.swsList[i].classList.remove('active');
            }

            for (let i = 0; i < that.tabs.length; i++) {
                that.tabs[i].classList.remove('active');
            }

            tab.classList.add('active');
            this.classList.add('active');

        });
    }
}

function getNumber(str) {
    return parseInt(str.replace(/\s/g, ''));
}

function number_format(number, decimals, dec_point, thousands_sep) {
    var i, j, kw, kd, km;
    if (isNaN(decimals = Math.abs(decimals))) {
        decimals = 2;
    }
    if (dec_point == undefined) {
        dec_point = ",";
    }
    if (thousands_sep == undefined) {
        thousands_sep = ".";
    }
    i = parseInt(number = (+number || 0).toFixed(decimals)) + "";
    if ((j = i.length) > 3) {
        j = j % 3;
    } else {
        j = 0;
    }
    km = (j ? i.substr(0, j) + thousands_sep : "");
    kw = i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + thousands_sep);
    kd = (decimals ? dec_point + Math.abs(number - i).toFixed(decimals).replace(/-/, 0).slice(2) : "");
    return km + kw + kd;
}

$('input[type=tel]').mask('+7 (999) 999-99-99');
/*YANDEX*/
$(function ()   {
    ymaps.ready(init);
    var myMap,
        myPlacemark;

    function init() {

        if ($('#map').length) {
            var center = [55.833849568909045,37.29893099999997];
            // if ($(window).width() < 576) {
            //     center = [55.609501798660396, 37.61325538360591];
            // }

            myMap = new ymaps.Map("map", {
                center: center,
                zoom: 16,
                controls: []
            });


            myMap.behaviors.disable(['scrollZoom']);

            myPin = new ymaps.GeoObjectCollection({}, {});


            myPlacemark1 = new ymaps.Placemark([55.833849568909045,37.29893099999997], {
                    balloonContentHeader: "Inthestore",
                    balloonContentBody: "Inthestore",
                    balloonContentFooter: "Московская область,  г. Красногорск, ул. Ленина, д. 38-б, офис 88",
                    hintContent: "Inthestore.ru"
                },
                {

                    preset: 'islands#violetDotIcon'
                });


            myPin.add(myPlacemark1);
            myMap.geoObjects.add(myPin);
        }
    }
});
/*END YANDEX*/
//header.js
$(function () {

    $(window).on('scroll', function () {
        let currScroll = $(window).scrollTop();
        let itemPosition = $('.header__bottom').offset().top;


        if (currScroll > itemPosition) {
            $('.header-fixed').addClass('active');
        } else {
            $('.header-fixed').removeClass('active');
        }
    });

    $('.mmenu-button').on('click', function (e) {
        $('.mmenu').addClass('active');
    });

    $('.mmenu__close').on('click', function (e) {
        $('.mmenu').removeClass('active');
    });

    $('.mmenu__item-link').on('click', function (e) {
        let $this = $(this),
            item = $this.closest('.mmenu__item'),
            wrap = $(item.find('.mmenu__wrapper')[0]),
            parentWrap = item.closest('.mmenu__wrapper');

        if (wrap.length > 0) {
            e.preventDefault();
            wrap.addClass('active');
            parentWrap.addClass('no-scroll');
            $('.mmenu').addClass('no-scroll');
        }
    });

    $('.mmenu__prev').on('click', function (e) {
        let $this = $(this),
            wrap = $(this).closest('.mmenu__wrapper'),
            parentWrap = wrap.parent().closest('.mmenu__wrapper');

        parentWrap.removeClass('no-scroll');
        wrap.removeClass('active');

        if (parentWrap.length == 0) {
            $('.mmenu').removeClass('no-scroll');
        }

    });

    $('.mmenu__city').on('click', function (e) {
        e.preventDefault();
        let $this = $(this),
            val = $this.find('.mmenu__item-title').text(),
            wrap = $this.closest('.mmenu__wrapper'),
            city = $('.mmenu__item-city');


        city.text(val);
        wrap.removeClass('active');
        $('.mmenu').removeClass('no-scroll');
    });
});


// slider.js
$(function () {
    let slider = new Swiper ('.slider__container', {
        loop: true,
        navigation: {
            nextEl: '.slider__next',
            prevEl: '.slider__prev',
        },
        pagination: {
            el: '.slider__pag',
            clickable: true
        }
    });

    let productSlider = new Swiper ('.psame__container', {
        loop: true,
        slidesPerView: 4,
        spaceBetween: 20,
        slidesPerGroup: 4,
        pagination: {
            el: '.psame__pag',
            clickable: true
        },
        breakpoints: {
            // when window width is <= 767.99px
            767.99: {
                slidesPerView: 'auto',
                slidesPerGroup: 1,
            },
            // when window width is <= 1199.99px
            1199.99: {
                slidesPerView: 3,
                slidesPerGroup: 3,
            }
        }
    });

});
//index.js
$(function () {


    const wWidth = $(window).width();

    if (wWidth > 767.9) {
        let maxH = 0,
            icatsTitle = $('.icat__title');

        icatsTitle.each(function (x, i) {
            let height = $(i).outerHeight();

            if (maxH < height) {
                maxH = height;
            }
        });

        icatsTitle.css('height', maxH);
    }

    if (document.querySelector('.sols__sws')) {
        let subSwitches = new Switches({
            sws: '.sols__sws',
            sw: '.sols__sw',
            tab: '.sols__tab',
            tabsContainer: '.sols__tabs'
        }).init();
    }
    if (document.querySelector('.iready__sws')) {
        let switches = new Switches({
            sws: '.iready__sws',
            sw: '.iready__sw',
            tab: '.iready__tab',
            tabsContainer: '.iready__tabs'
        }).init();
    }
    if (document.querySelector('.iready__msws')) {
        let switches = new Switches({
            sws: '.iready__msws',
            sw: '.iready__msw',
            tab: '.iready__mtab',
            tabsContainer: '.iready__mtabs'
        }).init();
    }


    let ireadySws = new Swiper('.iready__sws-container', {
        slidesPerView: 'auto',
        grabCursor: true
    });

    let ireadySlider = new Swiper('.iready__container', {
        slidesPerView: 'auto',
        grabCursor: true,
        spaceBetween: 10
    });




    let quiz = new Swiper('.quiz__container', {
        effect: 'cube',
        speed: 1500,
        allowTouchMove: false,
        cubeEffect: {
            shadow: false,
        },
        on: {
            slideChange: function (e) {
                // console.log(this);
                let counter = this.slides.length,
                    i = this.activeIndex + 1,
                    slide = $(this.slides[this.activeIndex]),
                    scrollbar = slide.find('.quiz__scrollbar'),
                    scrollbarLine = scrollbar.find('.quiz__scrollbar-line'),
                    width = '';

                width = ((100 / counter) * i) + '%'
                scrollbarLine.css('width', width);

            }
        }
    });

    $('.quiz__submit').on('click', function (e) {
        $(this).closest('.quiz__form').submit();
    });

    $('.quiz__form').validate(
        {
            rules: {
                quizName: "required",
                quizEmail: "required"
            },
            messages: {
                quizName: "Необходимо указать Ваше имя",
                quizEmail: "Неправильно указан адрес электронной почты"
            },
            submitHandler: function (form) {
                //ToDo здесь должен быть ajax, при успешной отправке данных перелистывается на следующий слайд
                quiz.slideNext();
            },
            errorPlacement: function (error, element) {
                element[0].placeholder = error[0].innerText;
            }
        }
    );

    $('.jsQuizNext').on('click', function (e) {
        e.preventDefault();
        quiz.slideNext();
    });

    $('.ichart__item-after').each(function (x, i) {

        let item = $(i),
            parent = item.closest('.ichart__item'),
            height = parent.outerHeight() - 33,
            arr = parent.find('.ichart__item-arr'),
            line = parent.find('.ichart__line'),
            bottomLine = parent.find('.ichart__item-before');

        if (x == 0) {
            $('.ichart__list').css({
                // paddingRight: (height/2)+'px'
            });
        }

        item.css({
            height: height + 'px',
            width: height + 'px',
            // left: 'calc(100% - '+(height/2)+'px)'
        });
        line.css({
            marginRight: (height / 2) + 'px'
        });
        arr.css({
            right: (height / 2) + 'px'
        });
        bottomLine.css({
            right: (height / 2) + 'px'
        });

    });

    $('.feed__form').validate(
        {
            rules: {
                name: "required",
                tel: "required"
            },
            messages: {
                name: "Укажите Ваше имя",
                tel: "Укажите Ваш телефон"
            },
            submitHandler: function (form) {
                //ToDo здесь должен быть ajax, при успешной отправке данных появляется всплывающее окно с результатом
            },
            errorPlacement: function (error, element) {
                element[0].placeholder = error[0].innerText;
            }
        }
    );

    $('.count__up').on('click', function (e) {

        let $this = $(this),
            count = $this.closest('.count'),
            inputObj = count.find('.count__input'),
            val = inputObj.val();
        val++;
        inputObj.val(val);
        inputObj.trigger('change');
    });
    $('.count__down').on('click', function (e) {
        let $this = $(this),
            count = $this.closest('.count'),
            inputObj = count.find('.count__input'),
            val = inputObj.val();

        val--;
        if (val >= 0) {
            inputObj.val(val);
            inputObj.trigger('change');
        }
    });


    let icats = $('.icats'),
        row = icats.find('.icats__hidden-row');

    if (wWidth < 768) {
        let icatItems = icats.find('.icat').slice(6);
        row.append(icatItems);
    } else if (wWidth < 1200) {
        let icatItems = icats.find('.icat').slice(16);
        row.append(icatItems);
    }

    $('.icats__more').on('click', function (e) {
        $('.icats__hidden').slideDown();
    });


});
//index.js
$(function () {

    let maxH = 0,
        uslugiTitle = $('.uslugi__item-title');

    uslugiTitle.each(function (x, i) {
        let height = $(i).outerHeight();

        if (maxH < height) {
            maxH = height;
        }
    });

    uslugiTitle.css('height', maxH);
});
//to.js
$(function () {

    if (document.querySelector('.to__sws')) {
        let subSwitches = new Switches({
            sws: '.to__sws',
            sw: '.to__sw',
            tab: '.to__tab',
            tabsContainer: '.to__tabs'
        }).init();
    }
});
//to.js
$(function () {

    if (document.querySelector('.zones__sws')) {
        let subSwitches = new Switches({
            sws: '.zones__sws',
            sw: '.zones__sw',
            tab: '.zones__tab',
            tabsContainer: '.zones__tabs'
        }).init();
    }
    if (document.querySelector('.market__sws')) {
        let subSwitches = new Switches({
            sws: '.market__sws',
            sw: '.market__sw',
            tab: '.market__tab',
            tabsContainer: '.market__tabs'
        }).init();
    }

    $('.mplace__place-title').on('click', function (e) {
        let $this = $(this),
            item = $this.closest('.mplace__place'),
            sub = item.find('.mplace__place-sub');

        sub.slideToggle(400);
        $this.toggleClass('open');
    });

    $('.mplace__place-input').on('change', function (e) {
        let $this = $(this),
            count = $this.val(),
            price = parseInt($this.data('price').replace(/\s/g, '')),
            item = $this.closest('.mplace__place-item'),
            itemPrice = item.find('.price__val');

        itemPrice.text(number_format(price * count, 0, '.', ' '))
        calcPlaces($this.closest('.mtab'));
    });

    function calcPlaces(tab) {
        let totalObj = tab.find('.mplaces__price-val .price__val'),
            total = 0,
            places = tab.find('.mplace__place-price .price__val'),
            items = tab.find('.mplace__item-price .price__val');

        places.each(function (x,i) {
            let item = $(i),
            price = getNumber(item.text());
            total += price;
        });
        items.each(function (x,i) {
            let item = $(i),
            price = getNumber(item.text());
            total += price;
        });
        totalObj.text(number_format(total, 0, '.', ' '))

    }



});
//catalog.js
$(function () {

    $('.cat__sort-select').selectize();

    $('.range__range').each(function (indx, elem) {
        var range = $(elem),
            filter = range.closest('.filter'),
            min = filter.data('from'),
            max = filter.data('to'),
            inputFrom = filter.find('.range__input_from'),
            inputTo = filter.find('.range__input_to'),
            numFrom = filter.find('.range__from'),
            numTo = filter.find('.range__to'),
            valMin = inputFrom.val(),
            valMax = inputTo.val();

        var slider = range.slider({
            range: true,
            min: min,
            max: max,
            values: [valMin, valMax],
            slide: function (event, ui) {
                inputFrom.val(ui.values[0]);
                inputTo.val(ui.values[1]);
            }
        });

        inputFrom.on('change', function (e) {
            var valMin = $(this).val(),
                valMax = inputTo.val();
            slider.slider({
                range: true,
                min: min,
                max: max,
                values: [valMin, valMax],
                slide: function (event, ui) {
                    inputFrom.val(ui.values[0]);
                    inputTo.val(ui.values[1]);
                }
            });
        });
        inputTo.on('change', function (e) {
            var valMax = $(this).val(),
                valMin = inputFrom.val();
            slider.slider({
                range: true,
                min: min,
                max: max,
                values: [valMin, valMax],
                slide: function (event, ui) {
                    inputFrom.val(ui.values[0]);
                    inputTo.val(ui.values[1]);
                }
            });
        });
    });

    $('.cmenu__item').on('click', function (e) {
        let item = $(this),
            sub = item.find('.cmenu__sublist');

        if (sub.length > 0) {
            e.preventDefault();
            if (item.hasClass('open')) {
                item.removeClass('open')
            } else {
                item.addClass('open')
            }
            sub.slideToggle(300);
        }

    });

    $('.item__count .count__input').on('change', function (e) {
        let $this = $(this),
            val = $this.val(),
            item = $this.closest('.item'),
            input = item.find('.item__hidden .count__input');

        input.val(val);
    });

    $('.cat__sort-button').on('click', function (e) {
        e.preventDefault();
        let $this = $(this),
            type = $this.data('type'),
            list = $('.cat__list');

        if (type == 'list') {
            list.addClass('list')
        } else {
            list.removeClass('list')
        }
        $this.removeClass('active');
        $('.cat__sort-button').not($this).addClass('active');
    });

    $('.cat__mobile-button').on('click', function () {
        let $this = $(this),
            type = $this.data('type'),
            slide = $('.cat__mobile-slide[data-type=' + type + ']'),
            slideNot = $('.cat__mobile-slide').not(slide);

        slideNot.removeClass('active');
        slide.toggleClass('active');

    });

    $('.cat__more-button').on('click', function (e) {
        let $this = $(this),
            hiddens = $('.cat__hidden:not(.active)'),
            hidden = $(hiddens[0]);
        hidden.addClass('active').slideDown();
    });

});
//product.js
$(function () {

    $('.product__img').on('click', function (e) {
        let $this = $(this),
            src = $this.data('img'),
            imgs = $('.product__img'),
            image = $('.product__image-img');

        imgs.removeClass('active');
        $this.addClass('active');
        image.attr('src', src);
    });

    $('.pkit__radio-input').on('change', function (e) {

        let $this = $(this),
            price = $this.data('price'),
            val = $this.val(),
            item = $this.closest('.pdop'),
            tarif = item.find('.pdop__tarif-tarif'),
            itemPrice = item.find('.pdop__price-val');

        tarif.text(val);
        itemPrice.text(number_format(price,'','',' '));
        calcTotal();
    });

    $('.pdop__input, .product__input').on('change',function (e) {
       calcTotal();
    });

    function calcTotal() {
        let productPrice = getNumber($('.product__price .price__val').text()),
            productCount = $('.product__count .count__input').val(),
            dops = $('.pdop__input:checked'),
            total = 0,
            totalObj = $('.ptotal__price-val');

        dops.each(function (x, i) {
            let item = $(i).closest('.pdop'),
                price = getNumber(item.find('.pdop__price-val').text());
            total = price + total;
        });

        total = (total+productPrice)*productCount;

        totalObj.text(number_format(total,'','',' '));
    }

    $('.product__drop-button').on('click', function (e) {
        let $this = $(this),
            drop = $this.closest('.product__drop'),
            block = drop.find('.product__drop-block');

        $this.toggleClass('active');
        block.slideToggle();

    });

});
//cart.js
$(function () {

    $('.cart__down').on('click', function (e) {
        let $this = $(this),
            count = $this.closest('.count'),
            inputObj = count.find('.count__input'),
            val = inputObj.val();

        val--;

        if (val >= 1) {
            inputObj.val(val);
            inputObj.trigger('change');
        }
        calcTotal();
    });
    $('.cart__up').on('click', function (e) {
        calcTotal();
    });
    $('.cart__del').on('click', function (e) {
        let $this = $(this),
            item = $this.closest('.cart__item');
        item.remove();
        calcTotal();
    });

    function calcTotal() {
        let items = $('.cart__item'),
            countProducts = 0,
            countServices = 0,
            total = 0,
            totalObj = $('.ctotal__price-val'),
            countObj = $('.ctotal__count');

        items.each(function (x, i) {
            let item = $(i),
                type = item.data('type'),
                price = getNumber(item.find('.price__val').text()),
                count = item.find('.cart__input').val();

            if (type == 'product') {
                countProducts++;
            } else {
                countServices++;
            }

            total = total + (price * count);

        });


        countObj.text('Товаров: '+countProducts+'\xa0\xa0\xa0'+'Услуг: '+countServices);
        totalObj.text(number_format(total, '', '', ' '));


    }

});

//# sourceMappingURL=main.min.js.map